@model Web.ViewModels.Shared.RadarChartViewModel

<div style="height:min(70vw, 300px)">
    <canvas id="@Model.Id"></canvas>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
<script>
    if (document.getElementById('@Model.Id')) {
        var ctx = document.getElementById('@Model.Id').getContext('2d');

        // https://www.chartjs.org/docs/latest/samples/advanced/linear-gradient.html
        var gradient1 = ctx.createLinearGradient(0, 0, 0, 300);
        gradient1.addColorStop(0, 'currentColor');
        gradient1.addColorStop(.5, 'skyblue');
        gradient1.addColorStop(1, 'currentColor');

        var gradient2 = ctx.createLinearGradient(0, 0, 0, 300);
        gradient2.addColorStop(0, 'currentColor');
        gradient2.addColorStop(.5, 'red');
        gradient2.addColorStop(1, 'currentColor');

        Chart.defaults.font.size = 16;
        new Chart(document.getElementById('@Model.Id'), {
            type: 'radar',
            data: {
                labels: @Json.Serialize(Model.Labels),
                datasets: [
                    {
                        label: 'This Month',
                        data: @Json.Serialize(Model.ThisMonth),
                        fill: false,
                        spanGaps: true,
                        showLine: true,
                        borderColor: gradient1,
                        backgroundColor: 'skyblue',
                    },
                    {
                        label: 'Last Month',
                        data: @Json.Serialize(Model.LastMonth),
                        fill: false,
                        spanGaps: true,
                        showLine: true,
                        borderColor: gradient1,
                        backgroundColor: 'red',
                    },
                ],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                elements: {
                    line: {

                    },
                    point: {
                        // Increase the radius around the point when the tooltip shows
                        hitRadius: 5,
                        // Increase the size of the point when the user is withing the bounds of the hitRadius
                        hoverRadius: 5,
                    },
                },
                scales: {
                    r: {
                        beginAtZero: true,
                        ticks: {
                            display: true,
                            color: 'skyblue',
                            backdropColor: 'rgba(255, 255, 255, 0.25)',
                            // No decimal places
                            precision: 0,
                        },
                    }
                },
                plugins: {
                    legend: {
                        // Don't show the graph legend
                        display: true,
                    },
                    tooltip: {
                        callbacks: {
                            //title: (context) => {
                                // Pretty-print the x-axis date in the hover tooltip
                                //return context.map(c => new Date(c.parsed.x).toDateString());
                            //},
                        },
                    },
                    /*
                    decimation: {
                        enabled: true,
                        algorithm: 'lttb',
                        samples: 12,
                    },
                    decimation: {
                        enabled: true,
                        algorithm: 'min-max',
                    },
                    */
                },
            }
        });
    }
</script>
