@model AcuteStressSeverityViewModel
@using Core.Models.Exercise
@using Data.Entities.User
@using Lib.Pages.Shared.Exercise

<h6 class="mb-1">DSM-5-TR Panic Severity</h6>
<div class="alert alert-light shadow">
    <h3>In the past SEVEN (7) DAYS:</h3>

    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManagePanicSeverity)" method="post"
          asp-route-email="@Model.User.Email" asp-route-token="@Model.Token"
          style="min-height:21ch;">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group mb-3 mt-3">
            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Flashbacks)</label>
            <div><span asp-validation-for="UserMood.Flashbacks" class="text-danger"></span></div>
            <div style="display:flex;column-gap:1ex;">
                <input id="@(Html.IdFor(_ => Model.UserMood.Flashbacks))" type="number" asp-for="UserMood.Flashbacks" style="width:6ch;height:fit-content;" class="allow-demo"
                       oninput="@(Html.IdFor(_ => Model.UserMood.Flashbacks))Input.value = this.valueAsNumber" />
                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                    <input type="range" style="width:100%;" class="allow-demo"
                           name="@(Html.IdFor(_ => Model.UserMood.Flashbacks))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Flashbacks))-input"
                           min="0" max="5" step="1" value="@(Model.UserMood.Flashbacks ?? 0)"
                           oninput="@(Html.IdFor(_ => Model.UserMood.Flashbacks)).value = this.valueAsNumber" />

                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                        <option value=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>

                        <!-- These need to be separate from the <option> elements because those have their position attribute overriden (from absolute to static) on Firefox -->
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))').value = ''; document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))-input').value = this.dataset.value" data-value="0" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(0% - .5ch)">N.A.</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))-input').value = this.dataset.value" data-value="1" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(20% - .5ch)">Poor</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))-input').value = this.dataset.value" data-value="2" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(40% - .5ch)">Okay</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))-input').value = this.dataset.value" data-value="3" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(60% - .5ch)">Decent</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))-input').value = this.dataset.value" data-value="4" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(80% - .5ch)">Good</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Flashbacks))-input').value = this.dataset.value" data-value="5" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;right:-2.5ch">Great</div>
                    </datalist>
                </div>
            </div>
            <div id="@(Html.IdFor(_ => Model.UserMood.Flashbacks))-help" class="form-text"></div>
        </div>

        <div class="form-group mb-3 mt-3">
            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Upset)</label>
            <div><span asp-validation-for="UserMood.Upset" class="text-danger"></span></div>
            <div style="display:flex;column-gap:1ex;">
                <input id="@(Html.IdFor(_ => Model.UserMood.Upset))" type="number" asp-for="UserMood.Upset" style="width:6ch;height:fit-content;" class="allow-demo"
                       oninput="@(Html.IdFor(_ => Model.UserMood.Upset))Input.value = this.valueAsNumber" />
                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                    <input type="range" style="width:100%;" class="allow-demo"
                           name="@(Html.IdFor(_ => Model.UserMood.Upset))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Upset))-input"
                           min="0" max="5" step="1" value="@(Model.UserMood.Upset ?? 0)"
                           oninput="@(Html.IdFor(_ => Model.UserMood.Upset)).value = this.valueAsNumber" />

                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                        <option value=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>

                        <!-- These need to be separate from the <option> elements because those have their position attribute overriden (from absolute to static) on Firefox -->
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))').value = ''; document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))-input').value = this.dataset.value" data-value="0" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(0% - .5ch)">N.A.</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))-input').value = this.dataset.value" data-value="1" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(20% - .5ch)">Poor</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))-input').value = this.dataset.value" data-value="2" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(40% - .5ch)">Okay</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))-input').value = this.dataset.value" data-value="3" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(60% - .5ch)">Decent</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))-input').value = this.dataset.value" data-value="4" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(80% - .5ch)">Good</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Upset))-input').value = this.dataset.value" data-value="5" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;right:-2.5ch">Great</div>
                    </datalist>
                </div>
            </div>
            <div id="@(Html.IdFor(_ => Model.UserMood.Upset))-help" class="form-text"></div>
        </div>



        <div class="form-group mb-3 mt-3">
            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Distant)</label>
            <div><span asp-validation-for="UserMood.Distant" class="text-danger"></span></div>
            <div style="display:flex;column-gap:1ex;">
                <input id="@(Html.IdFor(_ => Model.UserMood.Distant))" type="number" asp-for="UserMood.Distant" style="width:6ch;height:fit-content;" class="allow-demo"
                       oninput="@(Html.IdFor(_ => Model.UserMood.Distant))Input.value = this.valueAsNumber" />
                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                    <input type="range" style="width:100%;" class="allow-demo"
                           name="@(Html.IdFor(_ => Model.UserMood.Distant))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Distant))-input"
                           min="0" max="5" step="1" value="@(Model.UserMood.Distant ?? 0)"
                           oninput="@(Html.IdFor(_ => Model.UserMood.Distant)).value = this.valueAsNumber" />

                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                        <option value=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>

                        <!-- These need to be separate from the <option> elements because those have their position attribute overriden (from absolute to static) on Firefox -->
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))').value = ''; document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))-input').value = this.dataset.value" data-value="0" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(0% - .5ch)">N.A.</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))-input').value = this.dataset.value" data-value="1" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(20% - .5ch)">Poor</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))-input').value = this.dataset.value" data-value="2" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(40% - .5ch)">Okay</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))-input').value = this.dataset.value" data-value="3" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(60% - .5ch)">Decent</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))-input').value = this.dataset.value" data-value="4" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(80% - .5ch)">Good</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Distant))-input').value = this.dataset.value" data-value="5" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;right:-2.5ch">Great</div>
                    </datalist>
                </div>
            </div>
            <div id="@(Html.IdFor(_ => Model.UserMood.Distant))-help" class="form-text"></div>
        </div>



        <div class="form-group mb-3 mt-3">
            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Avoid)</label>
            <div><span asp-validation-for="UserMood.Avoid" class="text-danger"></span></div>
            <div style="display:flex;column-gap:1ex;">
                <input id="@(Html.IdFor(_ => Model.UserMood.Avoid))" type="number" asp-for="UserMood.Avoid" style="width:6ch;height:fit-content;" class="allow-demo"
                       oninput="@(Html.IdFor(_ => Model.UserMood.Avoid))Input.value = this.valueAsNumber" />
                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                    <input type="range" style="width:100%;" class="allow-demo"
                           name="@(Html.IdFor(_ => Model.UserMood.Avoid))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Avoid))-input"
                           min="0" max="5" step="1" value="@(Model.UserMood.Avoid ?? 0)"
                           oninput="@(Html.IdFor(_ => Model.UserMood.Avoid)).value = this.valueAsNumber" />

                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                        <option value=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>

                        <!-- These need to be separate from the <option> elements because those have their position attribute overriden (from absolute to static) on Firefox -->
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))').value = ''; document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))-input').value = this.dataset.value" data-value="0" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(0% - .5ch)">N.A.</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))-input').value = this.dataset.value" data-value="1" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(20% - .5ch)">Poor</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))-input').value = this.dataset.value" data-value="2" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(40% - .5ch)">Okay</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))-input').value = this.dataset.value" data-value="3" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(60% - .5ch)">Decent</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))-input').value = this.dataset.value" data-value="4" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(80% - .5ch)">Good</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Avoid))-input').value = this.dataset.value" data-value="5" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;right:-2.5ch">Great</div>
                    </datalist>
                </div>
            </div>
            <div id="@(Html.IdFor(_ => Model.UserMood.Avoid))-help" class="form-text"></div>
        </div>



        <div class="form-group mb-3 mt-3">
            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Alert)</label>
            <div><span asp-validation-for="UserMood.Alert" class="text-danger"></span></div>
            <div style="display:flex;column-gap:1ex;">
                <input id="@(Html.IdFor(_ => Model.UserMood.Alert))" type="number" asp-for="UserMood.Alert" style="width:6ch;height:fit-content;" class="allow-demo"
                       oninput="@(Html.IdFor(_ => Model.UserMood.Alert))Input.value = this.valueAsNumber" />
                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                    <input type="range" style="width:100%;" class="allow-demo"
                           name="@(Html.IdFor(_ => Model.UserMood.Alert))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Alert))-input"
                           min="0" max="5" step="1" value="@(Model.UserMood.Alert ?? 0)"
                           oninput="@(Html.IdFor(_ => Model.UserMood.Alert)).value = this.valueAsNumber" />

                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                        <option value=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>

                        <!-- These need to be separate from the <option> elements because those have their position attribute overriden (from absolute to static) on Firefox -->
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))').value = ''; document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))-input').value = this.dataset.value" data-value="0" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(0% - .5ch)">N.A.</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))-input').value = this.dataset.value" data-value="1" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(20% - .5ch)">Poor</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))-input').value = this.dataset.value" data-value="2" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(40% - .5ch)">Okay</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))-input').value = this.dataset.value" data-value="3" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(60% - .5ch)">Decent</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))-input').value = this.dataset.value" data-value="4" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(80% - .5ch)">Good</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Alert))-input').value = this.dataset.value" data-value="5" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;right:-2.5ch">Great</div>
                    </datalist>
                </div>
            </div>
            <div id="@(Html.IdFor(_ => Model.UserMood.Alert))-help" class="form-text"></div>
        </div>



        <div class="form-group mb-3 mt-3">
            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Startled)</label>
            <div><span asp-validation-for="UserMood.Startled" class="text-danger"></span></div>
            <div style="display:flex;column-gap:1ex;">
                <input id="@(Html.IdFor(_ => Model.UserMood.Startled))" type="number" asp-for="UserMood.Startled" style="width:6ch;height:fit-content;" class="allow-demo"
                       oninput="@(Html.IdFor(_ => Model.UserMood.Startled))Input.value = this.valueAsNumber" />
                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                    <input type="range" style="width:100%;" class="allow-demo"
                           name="@(Html.IdFor(_ => Model.UserMood.Startled))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Startled))-input"
                           min="0" max="5" step="1" value="@(Model.UserMood.Startled ?? 0)"
                           oninput="@(Html.IdFor(_ => Model.UserMood.Startled)).value = this.valueAsNumber" />

                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                        <option value=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>

                        <!-- These need to be separate from the <option> elements because those have their position attribute overriden (from absolute to static) on Firefox -->
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))').value = ''; document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))-input').value = this.dataset.value" data-value="0" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(0% - .5ch)">N.A.</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))-input').value = this.dataset.value" data-value="1" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(20% - .5ch)">Poor</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))-input').value = this.dataset.value" data-value="2" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(40% - .5ch)">Okay</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))-input').value = this.dataset.value" data-value="3" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(60% - .5ch)">Decent</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))-input').value = this.dataset.value" data-value="4" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(80% - .5ch)">Good</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Startled))-input').value = this.dataset.value" data-value="5" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;right:-2.5ch">Great</div>
                    </datalist>
                </div>
            </div>
            <div id="@(Html.IdFor(_ => Model.UserMood.Startled))-help" class="form-text"></div>
        </div>



        <div class="form-group mb-3 mt-3">
            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Irritable)</label>
            <div><span asp-validation-for="UserMood.Irritable" class="text-danger"></span></div>
            <div style="display:flex;column-gap:1ex;">
                <input id="@(Html.IdFor(_ => Model.UserMood.Irritable))" type="number" asp-for="UserMood.Irritable" style="width:6ch;height:fit-content;" class="allow-demo"
                       oninput="@(Html.IdFor(_ => Model.UserMood.Irritable))Input.value = this.valueAsNumber" />
                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                    <input type="range" style="width:100%;" class="allow-demo"
                           name="@(Html.IdFor(_ => Model.UserMood.Irritable))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Irritable))-input"
                           min="0" max="5" step="1" value="@(Model.UserMood.Irritable ?? 0)"
                           oninput="@(Html.IdFor(_ => Model.UserMood.Irritable)).value = this.valueAsNumber" />

                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                        <option value=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>

                        <!-- These need to be separate from the <option> elements because those have their position attribute overriden (from absolute to static) on Firefox -->
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))').value = ''; document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))-input').value = this.dataset.value" data-value="0" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(0% - .5ch)">N.A.</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))-input').value = this.dataset.value" data-value="1" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(20% - .5ch)">Poor</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))-input').value = this.dataset.value" data-value="2" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(40% - .5ch)">Okay</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))-input').value = this.dataset.value" data-value="3" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(60% - .5ch)">Decent</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))-input').value = this.dataset.value" data-value="4" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;left:calc(80% - .5ch)">Good</div>
                        <div onclick="document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))').value = document.getElementById('@(Html.IdFor(_ => Model.UserMood.Irritable))-input').value = this.dataset.value" data-value="5" style="white-space:nowrap;text-decoration:underline;cursor:pointer;position:absolute;right:-2.5ch">Great</div>
                    </datalist>
                </div>
            </div>
            <div id="@(Html.IdFor(_ => Model.UserMood.Irritable))-help" class="form-text"></div>
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary allow-demo" />
        </div>
    </form>

    <div style="height:min(70vw, 300px)">
        <canvas id="myChart8"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
<script>
    if (document.getElementById('myChart8')) {
        Chart.defaults.font.size = 16;
        new Chart(document.getElementById('myChart8'), {
            type: 'line',
            data: {
                datasets: [{
                    label: 'Weight',
                    data: @Json.Serialize(Model.Xys),
                    fill: false,
                    spanGaps: true,
                    showLine: true,
                    stepped: 'before',
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                elements: {
                    point: {
                        // Increase the radius around the point when the tooltip shows
                        hitRadius: 5,
                        // Increase the size of the point when the user is withing the bounds of the hitRadius
                        hoverRadius: 5,
                    },
                },
                scales: {
                    y: {
                        type: 'linear',
                        beginAtZero: false,
                        // How much blank space to add in above and below y-axis data?
                        grace: '5%',
                        title: {
                            // Display a label for the y-axis
                            display: false,
                            text: 'Weight',
                        },
                        ticks: {
                            color: 'skyblue',
                            // No decimal places
                            precision: 0,
                        },
                    },
                    // https://www.chartjs.org/docs/next/axes/cartesian/time.html
                    x: {
                        type: 'time',
                        time: {
                            minUnit: 'day',
                        },
                        ticks: {
                            color: 'skyblue',
                            major: {
                                // Allow displaying June 1st as just June
                                enabled: true,
                            },
                            font: (context) => {
                                // Bold major data points (June is bolded, June 11th is not)
                                return { weight: (context.tick && context.tick.major) ? 'bold' : '' };
                            }
                        },
                    },
                },
                plugins: {
                    legend: {
                        // Don't show the graph legend
                        display: false,
                    },
                    tooltip: {
                        callbacks: {
                            title: (context) => {
                                // Pretty-print the x-axis date in the hover tooltip
                                return context.map(c => new Date(c.parsed.x).toDateString());
                            },
                        },
                    },
                    /*
                    decimation: {
                        enabled: true,
                        algorithm: 'lttb',
                        samples: 12,
                    },
                    decimation: {
                        enabled: true,
                        algorithm: 'min-max',
                    },
                    */
                },
            }
        });
    }
</script>