@model CompleteMetabolicPanelViewModel
@using Core.Models.Components
@using Data.Entities.User
@using Lib.Pages.Shared.Exercise

@{
    bool show = Model.PreviousMood == null || Model.PreviousMood.Date < DateHelpers.Today.AddMonths(-1);
}

<h5 class="mb-1">Complete Metabolic Panel</h5>
<div class="alert alert-light shadow">
    @if (!show)
    {
        await Html.RenderPartialAsync("_LineChart", new LineChartViewModel()
        {
            XysGrouped = Model.XysGrouped,
            User = Model.User,
            Token = Model.Token,
            Type = Core.Models.Components.Component.CompleteMetabolicPanel
        });
    }
    else
    {
        <details>
            <summary>
                @{
                    await Html.RenderPartialAsync("_LineChart", new LineChartViewModel()
                    {
                        XysGrouped = Model.XysGrouped,
                        User = Model.User,
                        Token = Model.Token,
                        Type = Core.Models.Components.Component.CompleteMetabolicPanel
                    });
                }
            </summary>

            <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManageCompleteMetabolicPanel)" method="post"
                  asp-route-email="@Model.User.Email" asp-route-token="@Model.Token">

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Sodium)</label>
                    <div><span asp-validation-for="UserMood.Sodium" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Sodium))" asp-for="UserMood.Sodium" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Sodium))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Sodium))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Sodium))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Sodium ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Sodium)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Sodium))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Calcium)</label>
                    <div><span asp-validation-for="UserMood.Calcium" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Calcium))" asp-for="UserMood.Calcium" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Calcium))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Calcium))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Calcium))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Calcium ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Calcium)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Calcium))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Potassium)</label>
                    <div><span asp-validation-for="UserMood.Potassium" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Potassium))" asp-for="UserMood.Potassium" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Potassium))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Potassium))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Potassium))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Potassium ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Potassium)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Potassium))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Albumin)</label>
                    <div><span asp-validation-for="UserMood.Albumin" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Albumin))" asp-for="UserMood.Albumin" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Albumin))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Albumin))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Albumin))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Albumin ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Albumin)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Albumin))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.AlkalinePhosphatase)</label>
                    <div><span asp-validation-for="UserMood.AlkalinePhosphatase" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.AlkalinePhosphatase))" asp-for="UserMood.AlkalinePhosphatase" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.AlkalinePhosphatase))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.AlkalinePhosphatase))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.AlkalinePhosphatase))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.AlkalinePhosphatase ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.AlkalinePhosphatase)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.AlkalinePhosphatase))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.ALT)</label>
                    <div><span asp-validation-for="UserMood.ALT" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.ALT))" asp-for="UserMood.ALT" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.ALT))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.ALT))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.ALT))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.ALT ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.ALT)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.ALT))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.AnionGap)</label>
                    <div><span asp-validation-for="UserMood.AnionGap" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.AnionGap))" asp-for="UserMood.AnionGap" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.AnionGap))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.AnionGap))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.AnionGap))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.AnionGap ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.AnionGap)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber < 0 ? '' : this.valueAsNumber" />
                            
                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.AnionGap))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.AST)</label>
                    <div><span asp-validation-for="UserMood.AST" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.AST))" asp-for="UserMood.AST" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.AST))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.AST))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.AST))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.AST ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.AST)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.AST))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.BilirubinTotal)</label>
                    <div><span asp-validation-for="UserMood.BilirubinTotal" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.BilirubinTotal))" asp-for="UserMood.BilirubinTotal" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.BilirubinTotal))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.BilirubinTotal))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.BilirubinTotal))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.BilirubinTotal ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.BilirubinTotal)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.BilirubinTotal))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.BUN)</label>
                    <div><span asp-validation-for="UserMood.BUN" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.BUN))" asp-for="UserMood.BUN" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.BUN))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.BUN))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.BUN))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.BUN ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.BUN)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.BUN))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Chloride)</label>
                    <div><span asp-validation-for="UserMood.Chloride" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Chloride))" asp-for="UserMood.Chloride" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Chloride))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Chloride))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Chloride))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Chloride ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Chloride)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Chloride))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.CO2)</label>
                    <div><span asp-validation-for="UserMood.CO2" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.CO2))" asp-for="UserMood.CO2" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.CO2))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.CO2))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.CO2))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.CO2 ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.CO2)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.CO2))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Creatinine)</label>
                    <div><span asp-validation-for="UserMood.Creatinine" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Creatinine))" asp-for="UserMood.Creatinine" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Creatinine))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Creatinine))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Creatinine))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Creatinine ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Creatinine)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Creatinine))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.EGFRbyCKDEPI)</label>
                    <div><span asp-validation-for="UserMood.EGFRbyCKDEPI" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.EGFRbyCKDEPI))" asp-for="UserMood.EGFRbyCKDEPI" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.EGFRbyCKDEPI))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.EGFRbyCKDEPI))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.EGFRbyCKDEPI))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.EGFRbyCKDEPI ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.EGFRbyCKDEPI)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.EGFRbyCKDEPI))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Glucose)</label>
                    <div><span asp-validation-for="UserMood.Glucose" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Glucose))" asp-for="UserMood.Glucose" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Glucose))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Glucose))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Glucose))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Glucose ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Glucose)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Glucose))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.ProteinTotal)</label>
                    <div><span asp-validation-for="UserMood.ProteinTotal" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.ProteinTotal))" asp-for="UserMood.ProteinTotal" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.ProteinTotal))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.ProteinTotal))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.ProteinTotal))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.ProteinTotal ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.ProteinTotal)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.ProteinTotal))-help" class="form-text"></div>
                </div>

                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary allow-demo" />
                </div>
            </form>
        </details>
    }
</div>
