@model GutShortChainFattyAcidsViewModel
@using Core.Models.Components
@using Data.Entities.User

@{
    bool show = Model.PreviousMood == null || Model.PreviousMood.Date < DateHelpers.Today.AddMonths(-1);
}

<div class="alert alert-secondary">
    <div class="row gy-2">
        @if (show)
        {
            <div class="col-lg-6">
                <h5 class="mb-1">Gut Short Chain Fatty Acids</h5>
                <div class="alert alert-light shadow">
                    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManageGutShortChainFattyAcids)" method="post"
                          asp-route-email="@Model.User.Email" asp-route-token="@Model.Token">

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="form-group mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Butyrate)</label>
                            <div><span asp-validation-for="UserMood.Butyrate" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.Butyrate))" asp-for="UserMood.Butyrate" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.Butyrate))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.Butyrate))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.Butyrate))Input" list="hashmarks" value="@(Model.UserMood.Butyrate ?? -1)"
                                           min="@(UserGutShortChainFattyAcids.Consts.ButyrateMin - UserGutShortChainFattyAcids.Consts.ButyrateStep)" max="@UserGutShortChainFattyAcids.Consts.ButyrateMax" step="@UserGutShortChainFattyAcids.Consts.ButyrateStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.Butyrate)).value = this.valueAsNumber < @UserGutShortChainFattyAcids.Consts.ButyrateMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.Butyrate))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.Butyrate)</div>
                        </div>

                        <div class="form-group mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Valerate)</label>
                            <div><span asp-validation-for="UserMood.Valerate" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.Valerate))" asp-for="UserMood.Valerate" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.Valerate))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.Valerate))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.Valerate))Input" list="hashmarks" value="@(Model.UserMood.Valerate ?? -1)"
                                           min="@(UserGutShortChainFattyAcids.Consts.ValerateMin - UserGutShortChainFattyAcids.Consts.ValerateStep)" max="@UserGutShortChainFattyAcids.Consts.ValerateMax" step="@UserGutShortChainFattyAcids.Consts.ValerateStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.Valerate)).value = this.valueAsNumber < @UserGutShortChainFattyAcids.Consts.ValerateMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.Valerate))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.Valerate)</div>
                        </div>

                        <div class="form-group mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Lactate)</label>
                            <div><span asp-validation-for="UserMood.Lactate" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.Lactate))" asp-for="UserMood.Lactate" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.Lactate))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.Lactate))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.Lactate))Input" list="hashmarks" value="@(Model.UserMood.Lactate ?? -1)"
                                           min="@(UserGutShortChainFattyAcids.Consts.LactateMin - UserGutShortChainFattyAcids.Consts.LactateStep)" max="@UserGutShortChainFattyAcids.Consts.LactateMax" step="@UserGutShortChainFattyAcids.Consts.LactateStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.Lactate)).value = this.valueAsNumber < @UserGutShortChainFattyAcids.Consts.LactateMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.Lactate))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.Lactate)</div>
                        </div>

                        <div class="form-group mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Propionate)</label>
                            <div><span asp-validation-for="UserMood.Propionate" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.Propionate))" asp-for="UserMood.Propionate" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.Propionate))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.Propionate))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.Propionate))Input" list="hashmarks" value="@(Model.UserMood.Propionate ?? -1)"
                                           min="@(UserGutShortChainFattyAcids.Consts.PropionateMin - UserGutShortChainFattyAcids.Consts.PropionateStep)" max="@UserGutShortChainFattyAcids.Consts.PropionateMax" step="@UserGutShortChainFattyAcids.Consts.PropionateStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.Propionate)).value = this.valueAsNumber < @UserGutShortChainFattyAcids.Consts.PropionateMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.Propionate))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.Propionate)</div>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-primary allow-demo" />
                        </div>
                    </form>
                </div>
            </div>
        }

        <div class="col-lg-6">
            <h6 class="mb-1">Log</h6>
            <div class="alert alert-light shadow">
                @{
                    await Html.RenderPartialAsync("_LineChart", new LineChartViewModel()
                    {
                        XysGrouped = Model.XysGrouped,
                        User = Model.User,
                        Token = Model.Token,
                        Type = Core.Models.Components.Component.GutShortChainFattyAcids
                    });
                }
            </div>
        </div>
    </div>
</div>
