@model GutFungiViewModel
@using Core.Models.Components
@using Data.Entities.User

@{
    bool show = Model.PreviousMood == null || Model.PreviousMood.Date < DateHelpers.Today.AddMonths(-1);
}

    <div class="row gy-4">
        @if (show)
        {
            <div class="col-lg-6">
                <h5 class="mb-1">Gut Fungi</h5>
                <div class="alert alert-light shadow">
                    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManageGutFungi)" method="post"
                          asp-route-email="@Model.User.Email" asp-route-token="@Model.Token">

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.TotalFungi)</label>
                            <div><span asp-validation-for="UserMood.TotalFungi" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.TotalFungi))" asp-for="UserMood.TotalFungi" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.TotalFungi))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.TotalFungi))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.TotalFungi))Input" list="hashmarks" value="@(Model.UserMood.TotalFungi ?? -1)"
                                           min="@(UserGutFungi.Consts.TotalFungiMin - UserGutFungi.Consts.TotalFungiStep)" max="@UserGutFungi.Consts.TotalFungiMax" step="@UserGutFungi.Consts.TotalFungiStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.TotalFungi)).value = this.valueAsNumber < @UserGutFungi.Consts.TotalFungiMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                        <option value="125"></option>
                                        <option value="150"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.TotalFungi))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.TotalFungi)</div>
                        </div>

                        <div>
                            <input type="submit" value="Save" class="btn btn-primary allow-demo" />
                        </div>
                    </form>
                </div>
            </div>
        }

        <div class="col-lg-6">
            <h6 class="mb-1">Log</h6>
            <div class="alert alert-light shadow">
                @{
                    await Html.RenderPartialAsync("_LineChart", new LineChartViewModel()
                    {
                        User = Model.User,
                        Token = Model.Token,
                        XysGrouped = Model.XysGrouped,
                        Type = Core.Models.Components.Component.GutFungi
                    });
                }
            </div>
        </div>
    </div>
