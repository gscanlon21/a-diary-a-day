@model CbcWAutoDiffViewModel
@using Core.Models.Exercise
@using Data.Entities.User
@using Lib.Pages.Shared.Exercise

@{
    bool show = Model.PreviousMood == null || Model.PreviousMood.Date < DateHelpers.Today.AddMonths(-1);
}

<h5 class="mb-1">Cbc W Auto Differential</h5>
<div class="alert alert-light shadow">
    @if (!show)
    {
        await Html.RenderPartialAsync("_LineChart", new LineChartViewModel()
        {
            XysGrouped = Model.XysGrouped,
            User = Model.User,
            Token = Model.Token,
            Type = Components.CbcWAutoDiff
        });
    }
    else
    {
        <details>
            <summary>
                @{
                    await Html.RenderPartialAsync("_LineChart", new LineChartViewModel()
                    {
                        XysGrouped = Model.XysGrouped,
                        User = Model.User,
                        Token = Model.Token,
                    Type = Components.CbcWAutoDiff
                    });
                }
            </summary>

            <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManageCbcWAutoDiff)" method="post"
                  asp-route-email="@Model.User.Email" asp-route-token="@Model.Token">

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.WBC)</label>
                    <div><span asp-validation-for="UserMood.WBC" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.WBC))" asp-for="UserMood.WBC" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.WBC))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.WBC))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.WBC))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.WBC ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.WBC)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.WBC))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.RBCCount)</label>
                    <div><span asp-validation-for="UserMood.RBCCount" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.RBCCount))" asp-for="UserMood.RBCCount" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.RBCCount))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.RBCCount))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.RBCCount))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.RBCCount ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.RBCCount)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.RBCCount))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Hemoglobin)</label>
                    <div><span asp-validation-for="UserMood.Hemoglobin" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Hemoglobin))" asp-for="UserMood.Hemoglobin" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Hemoglobin))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Hemoglobin))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Hemoglobin))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Hemoglobin ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Hemoglobin)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Hemoglobin))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Hematocrit)</label>
                    <div><span asp-validation-for="UserMood.Hematocrit" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.Hematocrit))" asp-for="UserMood.Hematocrit" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.Hematocrit))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.Hematocrit))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.Hematocrit))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.Hematocrit ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.Hematocrit)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.Hematocrit))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.MCV)</label>
                    <div><span asp-validation-for="UserMood.MCV" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.MCV))" asp-for="UserMood.MCV" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.MCV))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.MCV))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.MCV))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.MCV ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.MCV)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.MCV))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.MCH)</label>
                    <div><span asp-validation-for="UserMood.MCH" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.MCH))" asp-for="UserMood.MCH" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.MCH))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.MCH))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.MCH))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.MCH ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.MCH)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.MCH))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.MCHC)</label>
                    <div><span asp-validation-for="UserMood.MCHC" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.MCHC))" asp-for="UserMood.MCHC" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.MCHC))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.MCHC))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.MCHC))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.MCHC ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.MCHC)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber < 0 ? '' : this.valueAsNumber" />
                            
                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.MCHC))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.RDW_CV)</label>
                    <div><span asp-validation-for="UserMood.RDW_CV" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.RDW_CV))" asp-for="UserMood.RDW_CV" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.RDW_CV))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.RDW_CV))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.RDW_CV))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.RDW_CV ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.RDW_CV)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.RDW_CV))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.PlatletCount)</label>
                    <div><span asp-validation-for="UserMood.PlatletCount" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.PlatletCount))" asp-for="UserMood.PlatletCount" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.PlatletCount))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.PlatletCount))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.PlatletCount))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.PlatletCount ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.PlatletCount)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.PlatletCount))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.MPV)</label>
                    <div><span asp-validation-for="UserMood.MPV" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.MPV))" asp-for="UserMood.MPV" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.MPV))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.MPV))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.MPV))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.MPV ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.MPV)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.MPV))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.MonocytePercent)</label>
                    <div><span asp-validation-for="UserMood.MonocytePercent" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.MonocytePercent))" asp-for="UserMood.MonocytePercent" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.MonocytePercent))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.MonocytePercent))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.MonocytePercent))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.MonocytePercent ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.MonocytePercent)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.MonocytePercent))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.EosinophilPercent)</label>
                    <div><span asp-validation-for="UserMood.EosinophilPercent" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.EosinophilPercent))" asp-for="UserMood.EosinophilPercent" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.EosinophilPercent))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.EosinophilPercent))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.EosinophilPercent))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.EosinophilPercent ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.EosinophilPercent)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.EosinophilPercent))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.BasophilPercent)</label>
                    <div><span asp-validation-for="UserMood.BasophilPercent" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.BasophilPercent))" asp-for="UserMood.BasophilPercent" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.BasophilPercent))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.BasophilPercent))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.BasophilPercent))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.BasophilPercent ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.BasophilPercent)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.BasophilPercent))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.ImmatureGranulocytesPercent)</label>
                    <div><span asp-validation-for="UserMood.ImmatureGranulocytesPercent" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.ImmatureGranulocytesPercent))" asp-for="UserMood.ImmatureGranulocytesPercent" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.ImmatureGranulocytesPercent))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.ImmatureGranulocytesPercent))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.ImmatureGranulocytesPercent))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.ImmatureGranulocytesPercent ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.ImmatureGranulocytesPercent)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.ImmatureGranulocytesPercent))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.NeutrophilAbsolute)</label>
                    <div><span asp-validation-for="UserMood.NeutrophilAbsolute" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.NeutrophilAbsolute))" asp-for="UserMood.NeutrophilAbsolute" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.NeutrophilAbsolute))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.NeutrophilAbsolute))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.NeutrophilAbsolute))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.NeutrophilAbsolute ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.NeutrophilAbsolute)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.NeutrophilAbsolute))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3" >
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.LymphocyteAbsolute)</label>
                    <div><span asp-validation-for="UserMood.LymphocyteAbsolute" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.LymphocyteAbsolute))" asp-for="UserMood.LymphocyteAbsolute" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.LymphocyteAbsolute))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.LymphocyteAbsolute))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.LymphocyteAbsolute))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.LymphocyteAbsolute ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.LymphocyteAbsolute)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.LymphocyteAbsolute))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3">
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.MonocyteAbsolute)</label>
                    <div><span asp-validation-for="UserMood.MonocyteAbsolute" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.MonocyteAbsolute))" asp-for="UserMood.MonocyteAbsolute" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.MonocyteAbsolute))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.MonocyteAbsolute))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.MonocyteAbsolute))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.MonocyteAbsolute ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.MonocyteAbsolute)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.MonocyteAbsolute))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3">
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.EosinophilAbsolute)</label>
                    <div><span asp-validation-for="UserMood.EosinophilAbsolute" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.EosinophilAbsolute))" asp-for="UserMood.EosinophilAbsolute" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.EosinophilAbsolute))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.EosinophilAbsolute))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.EosinophilAbsolute))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.EosinophilAbsolute ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.EosinophilAbsolute)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.EosinophilAbsolute))-help" class="form-text"></div>
                </div>

                <div class="form-group mb-3 mt-3">
                    <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.BasophilAbsolute)</label>
                    <div><span asp-validation-for="UserMood.BasophilAbsolute" class="text-danger"></span></div>
                    <div style="display:flex;column-gap:1ex;">
                        <input id="@(Html.IdFor(_ => Model.UserMood.BasophilAbsolute))" asp-for="UserMood.BasophilAbsolute" style="width:6ch;height:fit-content;" class="allow-demo"
                               oninput="@(Html.IdFor(_ => Model.UserMood.BasophilAbsolute))Input.value = this.valueAsNumber" />
                        <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                            <input type="range" style="width:100%;" class="allow-demo"
                                   name="@(Html.IdFor(_ => Model.UserMood.BasophilAbsolute))Input" list="hashmarks" id="@(Html.IdFor(_ => Model.UserMood.BasophilAbsolute))-input"
                                   min="-1" max="250" step="1" value="@(Model.UserMood.BasophilAbsolute ?? -1)"
                                   oninput="@(Html.IdFor(_ => Model.UserMood.BasophilAbsolute)).value = this.valueAsNumber < 0 ? '' : this.valueAsNumber" />

                            <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                <option value=""></option>
                                <option value="50"></option>
                                <option value="75"></option>
                                <option value="100"></option>
                                <option value="125"></option>
                                <option value="150"></option>
                            </datalist>
                        </div>
                    </div>
                    <div id="@(Html.IdFor(_ => Model.UserMood.BasophilAbsolute))-help" class="form-text"></div>
                </div>

                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary allow-demo" />
                </div>
            </form>
        </details>
    }
</div>
