@model GutPillarsViewModel
@using Core.Models.Components
@using Data.Entities.User

@{
    bool show = Model.PreviousMood == null || Model.PreviousMood.Date < DateHelpers.Today.AddMonths(-1);
}

    <div class="row gy-4">
        @if (show)
        {
            <div class="col-lg-6">
                <h5 class="mb-1">Gut Pillars</h5>
                <div class="alert alert-light shadow">
                    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManageGutPillars)" method="post"
                          asp-route-email="@Model.User.Email" asp-route-token="@Model.Token">

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Digestion)</label>
                            <div><span asp-validation-for="UserMood.Digestion" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.Digestion))" asp-for="UserMood.Digestion" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.Digestion))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.Digestion))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.Digestion))Input" list="hashmarks" value="@(Model.UserMood.Digestion ?? -1)"
                                           min="@(UserGutPillars.Consts.DigestionMin - UserGutPillars.Consts.DigestionStep)" max="@UserGutPillars.Consts.DigestionMax" step="@UserGutPillars.Consts.DigestionStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.Digestion)).value = this.valueAsNumber < @UserGutPillars.Consts.DigestionMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.Digestion))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.Digestion)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.Inflammation)</label>
                            <div><span asp-validation-for="UserMood.Inflammation" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.Inflammation))" asp-for="UserMood.Inflammation" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.Inflammation))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.Inflammation))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.Inflammation))Input" list="hashmarks" value="@(Model.UserMood.Inflammation ?? -1)"
                                           min="@(UserGutPillars.Consts.InflammationMin - UserGutPillars.Consts.InflammationStep)" max="@UserGutPillars.Consts.InflammationMax" step="@UserGutPillars.Consts.InflammationStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.Inflammation)).value = this.valueAsNumber < @UserGutPillars.Consts.InflammationMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                                <div id="@(Html.IdFor(_ => Model.UserMood.Inflammation))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.Inflammation)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.GutDysbiosis)</label>
                            <div><span asp-validation-for="UserMood.GutDysbiosis" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.GutDysbiosis))" asp-for="UserMood.GutDysbiosis" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.GutDysbiosis))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.GutDysbiosis))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.GutDysbiosis))Input" list="hashmarks" value="@(Model.UserMood.GutDysbiosis ?? -1)"
                                           min="@(UserGutPillars.Consts.GutDysbiosisMin - UserGutPillars.Consts.GutDysbiosisStep)" max="@UserGutPillars.Consts.GutDysbiosisMax" step="@UserGutPillars.Consts.GutDysbiosisStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.GutDysbiosis)).value = this.valueAsNumber < @UserGutPillars.Consts.GutDysbiosisMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.GutDysbiosis))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.GutDysbiosis)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.IntestinalPermeability)</label>
                            <div><span asp-validation-for="UserMood.IntestinalPermeability" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.IntestinalPermeability))" asp-for="UserMood.IntestinalPermeability" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.IntestinalPermeability))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.IntestinalPermeability))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.IntestinalPermeability))Input" list="hashmarks" value="@(Model.UserMood.IntestinalPermeability ?? -1)"
                                           min="@(UserGutPillars.Consts.IntestinalPermeabilityMin - UserGutPillars.Consts.IntestinalPermeabilityStep)" max="@UserGutPillars.Consts.IntestinalPermeabilityMax" step="@UserGutPillars.Consts.IntestinalPermeabilityStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.IntestinalPermeability)).value = this.valueAsNumber < @UserGutPillars.Consts.IntestinalPermeabilityMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.IntestinalPermeability))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.IntestinalPermeability)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.NervousSystem)</label>
                            <div><span asp-validation-for="UserMood.NervousSystem" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.NervousSystem))" asp-for="UserMood.NervousSystem" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.NervousSystem))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.NervousSystem))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.NervousSystem))Input" list="hashmarks" value="@(Model.UserMood.NervousSystem ?? -1)"
                                           min="@(UserGutPillars.Consts.NervousSystemMin - UserGutPillars.Consts.NervousSystemStep)" max="@UserGutPillars.Consts.NervousSystemMax" step="@UserGutPillars.Consts.NervousSystemStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.NervousSystem)).value = this.valueAsNumber < @UserGutPillars.Consts.NervousSystemMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.NervousSystem))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.NervousSystem)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.DiversityScore)</label>
                            <div><span asp-validation-for="UserMood.DiversityScore" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.DiversityScore))" asp-for="UserMood.DiversityScore" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.DiversityScore))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.DiversityScore))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.DiversityScore))Input" list="hashmarks" value="@(Model.UserMood.DiversityScore ?? -1)"
                                           min="@(UserGutPillars.Consts.DiversityScoreMin - UserGutPillars.Consts.DiversityScoreStep)" max="@UserGutPillars.Consts.DiversityScoreMax" step="@UserGutPillars.Consts.DiversityScoreStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.DiversityScore)).value = this.valueAsNumber < @UserGutPillars.Consts.DiversityScoreMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.DiversityScore))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.DiversityScore)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.ImmuneReadinessScore)</label>
                            <div><span asp-validation-for="UserMood.ImmuneReadinessScore" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.ImmuneReadinessScore))" asp-for="UserMood.ImmuneReadinessScore" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.ImmuneReadinessScore))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.ImmuneReadinessScore))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.ImmuneReadinessScore))Input" list="hashmarks" value="@(Model.UserMood.ImmuneReadinessScore ?? -1)"
                                           min="@(UserGutPillars.Consts.ImmuneReadinessScoreMin - UserGutPillars.Consts.ImmuneReadinessScoreStep)" max="@UserGutPillars.Consts.ImmuneReadinessScoreMax" step="@UserGutPillars.Consts.ImmuneReadinessScoreStep"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.ImmuneReadinessScore)).value = this.valueAsNumber < @UserGutPillars.Consts.ImmuneReadinessScoreMin ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.ImmuneReadinessScore))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.ImmuneReadinessScore)</div>
                        </div>

                        <div>
                            <input type="submit" value="Save" class="btn btn-primary allow-demo" />
                        </div>
                    </form>
                </div>
            </div>
        }

        <div class="col-lg-6">
            <h6 class="mb-1">Log</h6>
            <div class="alert alert-light shadow">
                @{
                    await Html.RenderPartialAsync("_LineChart", new LineChartViewModel()
                    {
                        XysGrouped = Model.XysGrouped,
                        User = Model.User,
                        Token = Model.Token,
                        Type = Core.Models.Components.Component.GutPillars
                    });
                }
            </div>
        </div>
    </div>
