@model SymptomViewModel
@using Core.Models.Components
@using Data.Entities.User

@{
    bool hide = Model.PreviousMood?.Date == DateHelpers.Today;
}

<div class="alert alert-secondary">
    <div class="row gy-2">
        @if (!hide)
        {
            <div class="col-lg-6">
                <h6 class="mb-1">Symptoms</h6>
                <div class="alert alert-light shadow">
                    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManageSymptom)" method="post"
                          asp-route-email="@Model.User.Email" asp-route-token="@Model.Token">

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="form-group mb-3 mt-3">
                            @for (var i = 0; i < Model.Customs.Count; i++)
                            {
                                <div class="form-check">
                                    <input class="allow-demo" type="hidden" asp-for="@Model.Customs[i].Id" />
                                    <input class="allow-demo" type="hidden" asp-for="@Model.Customs[i].Name" />
                                    <input id="@Html.IdFor(_ => Model.Customs[i].Selected)-symptom" asp-for="@Model.Customs[i].Selected" class="form-check-input allow-demo" type="checkbox">
                                    <label for="@Html.IdFor(_ => Model.Customs[i].Selected)-symptom" class="form-check-label">
                                        @Model.Customs[i].Name
                                    </label>
                                </div>
                            }
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-primary allow-demo" />
                        </div>
                    </form>
                </div>
            </div>
        }

        <div class="col-lg-6">
            <h6 class="mb-1">Log</h6>
            <div class="alert alert-light shadow">
                @{
                    await Html.RenderPartialAsync("_RadarChart", new RadarChartViewModel()
                    {
                        XysGrouped = Model.XysGrouped,
                        User = Model.User,
                        Token = Model.Token,
                        Type = Core.Models.Components.Component.Symptom
                    });
                }
            </div>
        </div>
    </div>
</div>
