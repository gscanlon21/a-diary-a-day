@model GutMicronutrientsViewModel
@using Core.Models.Components
@using Data.Entities.User

@{
    bool show = Model.PreviousMood == null || Model.PreviousMood.Date < DateHelpers.Today.AddMonths(-1);
}

    <div class="row gy-4">
        @if (show)
        {
            <div class="col-lg-6">
                <h5 class="mb-1">Gut Micronutrients</h5>
                <div class="alert alert-light shadow">
                    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManageGutMicronutrients)" method="post"
                          asp-route-email="@Model.User.Email" asp-route-token="@Model.Token">

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.VitaminB3)</label>
                            <div><span asp-validation-for="UserMood.VitaminB3" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.VitaminB3))" asp-for="UserMood.VitaminB3" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.VitaminB3))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.VitaminB3))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.VitaminB3))Input" list="hashmarks" value="@(Model.UserMood.VitaminB3 ?? -1)"
                                           min="@(UserGutMicronutrients.Consts.VitaminB3Min - UserGutMicronutrients.Consts.VitaminB3Step)" max="@UserGutMicronutrients.Consts.VitaminB3Max" step="@UserGutMicronutrients.Consts.VitaminB3Step"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.VitaminB3)).value = this.valueAsNumber < @UserGutMicronutrients.Consts.VitaminB3Min ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.VitaminB3))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.VitaminB3)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.VitaminB6)</label>
                            <div><span asp-validation-for="UserMood.VitaminB6" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.VitaminB6))" asp-for="UserMood.VitaminB6" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.VitaminB6))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.VitaminB6))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.VitaminB6))Input" list="hashmarks" value="@(Model.UserMood.VitaminB6 ?? -1)"
                                           min="@(UserGutMicronutrients.Consts.VitaminB6Min - UserGutMicronutrients.Consts.VitaminB6Step)" max="@UserGutMicronutrients.Consts.VitaminB6Max" step="@UserGutMicronutrients.Consts.VitaminB6Step"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.VitaminB6)).value = this.valueAsNumber < @UserGutMicronutrients.Consts.VitaminB6Min ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.VitaminB6))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.VitaminB6)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.VitaminB9)</label>
                            <div><span asp-validation-for="UserMood.VitaminB9" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.VitaminB9))" asp-for="UserMood.VitaminB9" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.VitaminB9))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.VitaminB9))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.VitaminB9))Input" list="hashmarks" value="@(Model.UserMood.VitaminB9 ?? -1)"
                                           min="@(UserGutMicronutrients.Consts.VitaminB9Min - UserGutMicronutrients.Consts.VitaminB9Step)" max="@UserGutMicronutrients.Consts.VitaminB9Max" step="@UserGutMicronutrients.Consts.VitaminB9Step"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.VitaminB9)).value = this.valueAsNumber < @UserGutMicronutrients.Consts.VitaminB9Min ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.VitaminB9))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.VitaminB9)</div>
                        </div>

                        <div class="mb-3 mt-3">
                            <label class="control-label">@Html.DisplayNameFor(_ => Model.UserMood.VitaminB12)</label>
                            <div><span asp-validation-for="UserMood.VitaminB12" class="text-danger"></span></div>
                            <div style="display:flex;column-gap:1ex;">
                                <input id="@(Html.IdFor(_ => Model.UserMood.VitaminB12))" asp-for="UserMood.VitaminB12" style="width:6ch;height:fit-content;" class="allow-demo"
                                       oninput="@(Html.IdFor(_ => Model.UserMood.VitaminB12))Input.value = this.valueAsNumber" />
                                <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                                    <input id="@(Html.IdFor(_ => Model.UserMood.VitaminB12))-input" class="allow-demo" style="width:100%;" type="range"
                                           name="@(Html.IdFor(_ => Model.UserMood.VitaminB12))Input" list="hashmarks" value="@(Model.UserMood.VitaminB12 ?? -1)"
                                           min="@(UserGutMicronutrients.Consts.VitaminB12Min - UserGutMicronutrients.Consts.VitaminB12Step)" max="@UserGutMicronutrients.Consts.VitaminB12Max" step="@UserGutMicronutrients.Consts.VitaminB12Step"
                                           oninput="@(Html.IdFor(_ => Model.UserMood.VitaminB12)).value = this.valueAsNumber < @UserGutMicronutrients.Consts.VitaminB12Min ? '' : this.valueAsNumber" />

                                    <datalist id="hashmarks" style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                                        <option value=""></option>
                                        <option value="25"></option>
                                        <option value="50"></option>
                                        <option value="75"></option>
                                        <option value="100"></option>
                                    </datalist>
                                </div>
                            </div>
                            <div id="@(Html.IdFor(_ => Model.UserMood.VitaminB12))-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.UserMood.VitaminB12)</div>
                        </div>

                        <div>
                            <input type="submit" value="Save" class="btn btn-primary allow-demo" />
                        </div>
                    </form>
                </div>
            </div>
        }

        <div class="col-lg-6">
            <h6 class="mb-1">Log</h6>
            <div class="alert alert-light shadow">
                @{
                    await Html.RenderPartialAsync("_LineChart", new LineChartViewModel()
                    {
                        XysGrouped = Model.XysGrouped,
                        User = Model.User,
                        Token = Model.Token,
                        Type = Core.Models.Components.Component.GutMicronutrients
                    });
                }
            </div>
        </div>
    </div>
